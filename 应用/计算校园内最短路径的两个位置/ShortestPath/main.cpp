#include"include/graph.h"
#include "include/algorithm.h"

int main()
{
    /*0--图书馆---104.006277,30.562702
     *1--体育馆---104.012912,30.563747
     *2--艺术学院--104.00187,30.561488
     *3--一教---104.00634,30.560927
     *4--文科楼---104.010855,30.565392
     *5--华联超市--103.999783,30.559281
     *6--行政楼---104.009139,30.560129
     *7--二餐--103.998383,30.558462
     */
    Node arr[]= {
            Node(0,"图书馆","学霸栖息地"),
            Node(1,"体育馆","肥宅的我从来没去过"),
            Node(2,"艺术学院","艺术气息浓厚"),
            Node(3,"一教A座","一栋超长的教学楼"),
            Node(4,"文科楼","四川大学江安校区文科楼"),
            Node(5,"华联超市","校园超市，不过水果超贵"),
            Node(6,"行政楼","同学你下来吧"),
            Node(7,"二餐","江安二餐，最经常光顾的食堂")
    };

    Graphm g(8);
    //7点是起始点
    //设置各点的路径
    int source[]={7,7,0,5,5,2,3,3,2};
    int dest[]=  {5,0,3,2,3,4,4,6,6};
    int distance[]={162,891,198,316,654,964,659,282,713};
    for(unsigned int i=0;i<sizeof(source)/sizeof(int);i++){
        g.setEdge(source[i],dest[i],distance[i]);
    }
    //D为距离数组，root为路径数组
    int D[8] = {};
    int root[8] = {};
    Dijkstra(&g, D, 7,4,root);
    //测试两个点的最短路径
    for(int i=1;i<7;i++)
        printRoot(root,7,i);
    printRoot(root, 5, 6);
    arr[2].print();
    return 0;
}

